spring.application.name=product
server.port=2011

spring.jpa.database=postgresql
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/embudi
spring.datasource.username=postgres
spring.datasource.password=javico123
spring.jpa.show-sql=true

# display sql queries in an orderly manner
#spring.jpa.properties.hibernate.format_sql=true

# dialect is used to use a postgres's reserved word, only exist on Postgres
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Habilitar generación de DDL Hibernate, me sirvió para poner en producción en la nube, porque me dió un error: Error creating bean with name 'scriptDataSourceInitializer'
spring.jpa.defer-datasource-initialization=true

# Ejecuta el archivo data.sql para iniciar datos en alguna tabla
spring.datasource.initialization-mode=always

jwtsign=m2H0EwqfFT41YCT4kBz6ARUaokcvee1N
dateFormat=dd/MM/yyyy
timeFormat=hh:mm:ss
jwtexpirationtoken=300000

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
# All files uploaded through the REST API will be stored in this directory
# si empiezo con el slash (/) se usa la unidad de almacenamiento del proyecto
# En mi caso el proyecto estaba dentro de ?d:\Netbeans Proyects? y los archivos se guardaron en ?D:\logs\files?
file.upload-dir=/lms/embudifiles
